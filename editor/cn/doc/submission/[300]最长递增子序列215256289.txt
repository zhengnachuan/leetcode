    class Solution {
        public int lengthOfLIS(int[] nums) {
            if (nums.length == 0) {
                return 0;
            }
            //  以i结束的最长递增子序列
            int[] dp = new int[nums.length];
            dp[0] = 1;
            int res = 1;
            for (int i = 1; i < nums.length; i++) {
                for (int j = 0; j < i; j++) {
                    dp[i] = Math.max(dp[i], nums[i] > nums[j] ? dp[j] + 1 : 1);
                }
                res = Math.max(res, dp[i]);
            }
            return res;
        }
    }

//runtime:79 ms
//memory:38.1 MB
